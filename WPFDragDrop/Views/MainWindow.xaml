<Window x:Class="DomainModelEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DomainModelEditor.Views"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindow}"
        Title="WPFDragDrop" Height="650" Width="825">
    <Window.Resources>
        <DataTemplate x:Key="MyItemTemplate">
            <local:EntityView DataContext="{Binding}" 
                              X="{Binding Path=NewX,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}"
                              Y="{Binding Path=NewY,Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged}"
                              />
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="36"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="Black">
            <StackPanel Orientation="Horizontal" Height="36">
                <Label Content="Domain Model Editor" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Button Width="80" Content="Add Entity" Margin="3,3,3,3" 
                         Command="{Binding Path=AddEntityCommand}"
                         Style="{StaticResource ResourceKey=PrimaryButton}"/>
                <Button x:Name="btnAddAttribute" Width="100" Content="Add Attribute" Margin="3,3,3,3" 
                        Command="{Binding Path=AddAttributeCommand}"
                        Style="{StaticResource ResourceKey=SecondaryButton}"
                        />
            </StackPanel>
        </Border>
        <ListBox x:Name="EditorCanvas" Grid.Row="1" 
                      ItemsSource="{Binding Path=Items,Mode=OneWay}"
                      ItemTemplate="{StaticResource MyItemTemplate}"
                      SelectedItem="{Binding Path=SelectedEntity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                      >
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas>                        
                    </Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid Background="{TemplateBinding Background}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected"/>
                                            <VisualState x:Name="Selected"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused"/>
                                            <VisualState x:Name="Unfocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="fillColor" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                                    <Rectangle x:Name="fillColor2" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                                    <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" StrokeThickness="1" Visibility="Collapsed"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Canvas.Top" Value="{Binding Path=Model.Y}" />
                    <Setter Property="Canvas.Left" Value="{Binding Path=Model.X}" />
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                    <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="ContentPresenter_PreviewMouseLeftButtonDown"/>-->
                </Style>
            </ListBox.ItemContainerStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseRightButtonDown" >
                    <i:InvokeCommandAction Command="{Binding Path=ClearSelectionCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>
    </Grid>
</Window>
